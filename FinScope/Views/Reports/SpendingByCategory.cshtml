@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Spending by Category";
    var selectedMonth = Context.Request.Query["month"].ToString();
    var selectedYear = Context.Request.Query["year"].ToString();
}

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <form method="get" asp-controller="Reports" asp-action="SpendingByCategory" class="mb-3">
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    <label for="month" class="form-label">Select Month:</label>
                    <select name="month" id="month" class="form-select" onchange="this.form.submit()">
                        @{
                            var isAllSelected = string.IsNullOrEmpty(selectedMonth) || selectedMonth == "All";
                        }
                        <option value="All" selected="@isAllSelected">All Months</option>
                        @for (int m = 1; m <= 12; m++)
                        {
                            var monthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m);
                            var isSelected = selectedMonth == m.ToString();
                            <option value="@m" selected="@isSelected">@monthName</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="year" class="form-label">Select Year:</label>
                    <select name="year" id="year" class="form-select" onchange="this.form.submit()">
                        @{
                            var currentYear = DateTime.Now.Year;
                            for (int y = currentYear; y >= currentYear - 10; y--)
                            {
                                var isYearSelected = selectedYear == y.ToString();
                                <option value="@y" selected="@isYearSelected">@y</option>
                            }
                        }
                        <option value="All" selected="@(string.IsNullOrEmpty(selectedYear) || selectedYear == "All")">All Years</option>
                    </select>
                </div>
            </form>
        </div>

        <div class="col-md-9">
            <h2>
                Spending by Category
                @if (!string.IsNullOrEmpty(selectedMonth) && selectedMonth != "All" && !string.IsNullOrEmpty(selectedYear) && selectedYear != "All")
                {
                    var selectedMonthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(int.Parse(selectedMonth));
                    <text> - @selectedMonthName @selectedYear</text>
                }
            </h2>

            <div class="card" style="max-height: 600px; overflow-y: auto;">
                <div class="card-body">
                    <table class="table table-bordered table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Category</th>
                                <th>Total Spent</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Category</td>
                                    <td><span class="text-danger">@((decimal)item.Total)</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="mt-4">
                <a href="@Url.Action("SpendingByCategoryChart", "Visualizations", new { month = selectedMonth, year = selectedYear })" class="btn btn-primary">
                    View Spending Chart
                </a>
            </div>
        </div>
    </div>
</div>
