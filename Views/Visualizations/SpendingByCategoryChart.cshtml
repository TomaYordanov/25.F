@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Spending by Category Chart";
    var selectedMonth = Context.Request.Query["month"].ToString();
    var selectedYear = Context.Request.Query["year"].ToString();
}

<div class="container">
    <h2>
        Spending Chart
        @if (!string.IsNullOrEmpty(selectedMonth) && selectedMonth != "All" && !string.IsNullOrEmpty(selectedYear) && selectedYear != "All")
        {
            var selectedMonthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(int.Parse(selectedMonth));
            <text> - @selectedMonthName @selectedYear</text>
        }
    </h2>

    <div class="card p-4">
        <canvas id="categoryChart" style="max-width: 500px; margin: auto;"></canvas>
    </div>

    <div class="mt-3">
        <a href="@Url.Action("SpendingByCategory", "Reports")" class="btn btn-secondary">Back to Report</a>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Category)));
        const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Total)));

        const ctx = document.getElementById('categoryChart').getContext('2d');
        const categoryChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Spending by Category',
                    data: data,
                    backgroundColor: [
                        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    </script>
}
