@model List<finalProject.ViewModels.YearlySavingsViewModel>
@using System.Text.Json

@{
    ViewData["Title"] = "Yearly Savings Chart";
}

<h2>Yearly Savings Chart</h2>

@if (!Model.Any())
{
    <p>No savings data available.</p>
}
else
{
    <a class="btn btn-secondary mb-3" asp-controller="SavingGoal" asp-action="Index">← Back to My Saving Goals</a>
    <canvas id="yearlySavingsChart" width="800" height="400"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(JsonSerializer.Serialize(Model.Select(m => m.Year)));
        const data = @Html.Raw(JsonSerializer.Serialize(Model.Select(m => m.TotalSaved)));

        const ctx = document.getElementById('yearlySavingsChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Savings by Goal Deadline Year',
                    data: data,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Amount Saved Toward Goals Due This Year'
                        },
                        ticks: {
                            callback: function (value) {
                                return value + 'лв.';
                            }
                        }
                    }
                }
            }
        });
    </script>
}
