@using Microsoft.AspNetCore.Identity
@model finalProject.ViewModels.UsersViewModel
@inject UserManager<ApplicationUser> UserManager

<h2>User Management</h2>

@if (Model.Users != null && Model.Users.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th> 
                <th>Email</th>
                <th>Roles</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.Name</td> 
                    <td>@user.Email</td>
                    <td>
                        @string.Join(", ", await UserManager.GetRolesAsync(user))
                    </td>
                    <td>
                        <a asp-action="EditUser" asp-route-id="@user.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="DeleteUser" asp-route-id="@user.Id"
                           onclick="return confirm('Are you sure?');"
                           class="btn btn-danger btn-sm ml-2">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Users" asp-route-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>

}
else
{
    <p>No users found.</p>
}
